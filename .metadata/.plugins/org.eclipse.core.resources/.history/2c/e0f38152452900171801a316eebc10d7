package kg.rp.ibl;

import java.util.*;

public class DistânciaEuclidiana implements FunçãoSimilaridade
{
	private int atrs;
	private double[] min, max, mult;
	
	public DistânciaEuclidiana(int atrs)
	{
		this.atrs = atrs;
		
		min = new double[atrs];
		max = new double[atrs];
		Arrays.fill(min, Double.MAX_VALUE);
		Arrays.fill(max, -Double.MAX_VALUE);
		mult = new double[atrs];
	}
	
	@Override
	public double aplicar(Amostra a, Amostra b)
	{
		// Somatório dos quadrados das diferenças
		double soma = 0;
		for (int i = 0; i < atrs; i++)
		{
			double dif = normalizar(a.atributo(i), i) - normalizar(b.atributo(i), i); 
			soma += dif*dif;
		}
		// Oposto da raiz do somatório
		return -Math.sqrt(soma);
	}
	
	private double normalizar(double v, int i)
	{
		return (v - min[i])*mult[i];
	}
	
	@Override
	public void atualizarNormalização(Amostra a)
	{
		for (int i = 0; i < atrs; i++)
		{
			min[i] = Math.min(min[i], a.atributo(i));
			max[i] = Math.max(max[i], a.atributo(i));
			double m = 1/(max[i] - min[i]);
			mult[i] = Double.isInfinite(m) ? 0 : m;
		}
	}
}
